- [ ] Installation?

Server
- [ ] create_bar

Nice things
- [ ] clean up file names
- [ ] add logging
- [ ] ContextManager interface
- [ ] Use pythonic args and convert to CLI options
- [ ] add DESIGN.mkd
- [ ] add usage examples to README
- [ ] Basic unit tests eventually, maybe
- [ ] Confirm and enforce python3 requirement (if necessary)
- [ ] Run tests in virtualenv

 Design notes:

```
# Service side

lb = LemonBar.from_yaml('config.yml')
ls = LemonbarService()
ls.register(lb)

ls.wait_for_shutdown()
```

So to do this we need a server/service/manager running in the background and a way to
connect to it

Need to reorganize files
- lemonbar.py - shared constants, etc
- bar.py - LemonBar
- service.py - LemonbarService
- client - LemonbarClient.py

Would be cool to define a format data type so that update() only updates what's new or requested
